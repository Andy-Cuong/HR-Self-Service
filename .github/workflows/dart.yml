name: CI/CD with Environments

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

env:
  FLUTTER_VERSION: '3.35.4'
  JAVA_VERSION: '21'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Get code
      uses: actions/checkout@v5

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Install dependencies
      run: flutter pub get

    - name: Analyze code
      run: flutter analyze

    - name: Run tests
      run: flutter test

  build-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging # GitHub feature for deployment environments

    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
    - run: flutter pub get
    
    # - name: Configure Firebase for Staging
    #   run: |
    #     echo "${{ secrets.FIREBASE_OPTIONS_STAGING }}" > lib/firebase_options.dart

    - name: Build Staging APK
      run: flutter build apk --debug --flavor staging

    - name: Save Staging APK
      uses: actions/upload-artifact@v4
      with:
        name: staging-apk
        path: build/app/outputs/flutter-apk/*.apk

  build-production:
    needs: test # Only build if all tests pass
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only build on main branch
    environment: production

    steps:
    - uses: actions/checkout@v5

    - name: Setup Java
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: ${{ env.JAVA_VERSION }}

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - run: flutter pub get

    # - name: Configure Firebase for Production
    #   run: |
    #     echo "${{ secrets.FIREBASE_OPTIONS_PROD }}" > lib/firebase_options.dart

    - name: Build Release APK
      run: flutter build apk --release

    - name: Save Release APK
      uses: actions/upload-artifact@v4
      with:
        name: production-apk
        path: build/app/outputs/flutter-apk/app-debug.apk